<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\Relations\BelongsTo;

class PurchaseOrder extends Model
{
    protected $fillable = [
        'orderNumber',
        'supplierId',
        'paymentTerms',
        'deliveryDate',
        'totalAmount',
    ];

    protected static function boot()
    {
        parent::boot();

        static::created(function ($purchaseOrder) {
            // Automatically create a delivery record when a purchase order is created
            $purchaseOrder->deliveries()->create([
                'orderStatus' => 'Pending', // Set default status
                // deliveryId will be automatically generated by the Delivery model's boot method
            ]);
        });
    }

    public function supplier(): BelongsTo
    {
        return $this->belongsTo(Supplier::class, 'supplierId');
    }

    public function items(): HasMany
    {
        return $this->hasMany(PurchaseOrderItem::class);
    }

    // REMOVE THIS OLD RELATIONSHIP - or keep it if you still need it for migration
    // public function inventory(): HasMany
    // {
    //     return $this->hasMany(Inventory::class, 'purchase_order_id');
    // }

    public function deliveries(): HasMany
    {
        return $this->hasMany(Delivery::class);
    }
    
    public function badItems()
    {
        return $this->hasManyThrough(BadItem::class, PurchaseOrderItem::class);
    }

    public function notes()
    {
        return $this->hasMany(PONote::class);
    }

    // ADD THIS NEW RELATIONSHIP FOR BATCHES
    public function productBatches()
    {
        return $this->hasManyThrough(ProductBatch::class, PurchaseOrderItem::class);
    }
}